#!/usr/bin/env bash
set -eo pipefail

{% if aws_access_key_id != "none" %}
export AWS_ACCESS_KEY_ID={{ aws_access_key_id }}
export AWS_SECRET_ACCESS_KEY={{ aws_secret_access_key }}
{% endif %}

export AWS_REGION={{ region }}

echo "Ensuring client is not in blocksync status..."
n=0
until [ $(curl -sS -H "Content-Type: application/json" -d '{"id": 1, "jsonrpc": "2.0", "method": "system_health", "params": []}' http://localhost:{{ api_rpc_port }} | jq -r '.result.isSyncing') == false ] || [ ${n} -ge 30 ]
do
  printf '.'
  sleep 1
  ((n=n+1))
done

if [[ n -ge 30 ]]
then
  echo "Client is still syncing. We'll try again later."
  exit 1
fi

echo "Stopping client..."
systemctl stop {{ chain_stub }}.service

echo "Syncing blockchain to S3..."
/usr/local/bin/aws s3 sync /data/chains/{{ chain_stub }}/db s3://{{ sync_bucket_name }}/{{ chain }}/db

if [ ! -f /data/chains/{{ chain_stub }}/{{ chain }}_sync_ready ]; then
    touch /data/chains/{{ chain_stub }}/{{ chain }}_sync_ready
    /usr/local/bin/aws s3 cp /data/chains/{{ chain_stub }}/{{ chain }}_sync_ready s3://{{ sync_bucket_name }}/{{ chain }}_sync_ready
fi

echo "Restarting client..."
systemctl start {{ chain_stub }}.service

echo "Sync complete!"